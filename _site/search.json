[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggrepel is an R package that offers geoms for ggplot2, enabling the repulsion of overlapping text labels\nggthemes is an R package that offers additional themes, geoms, and scales for ‘ggplot2’\nhrbrthemes is an R package that offers typography-centric themes and theme components for ggplot2\npatchwork is an R package designed for creating composite figures using ggplot2\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n\n\n\n\nThe exam_data tibble data frame comprises seven attributes in total.\n4 categorical data type:\n\nID\nCLASS\nGENDER\nRACE\n\n3 continuous data type:\n\nMATHS\nENGLISH\nSCIENCE\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nPlotting statistical graphs can be challenging, particularly when dealing with a large number of data points and the need for effective annotation. ggrepel serves as an extension of the ggplot2 package, offering geoms designed to repel overlapping text, as demonstrated in the examples on the right. To implement this functionality, you can seamlessly replace geom_text() with geom_text_repel() and geom_label() with geom_label_repel.\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nggplot2 includes a set of eight built-in themes, each providing a distinct visual style. These themes are:\n\ntheme_gray()\ntheme_bw()\ntheme_classic()\ntheme_dark()\ntheme_light()\ntheme_linedraw()\ntheme_minimal()\ntheme_void()\n\nClick on this link for further information on ggplot2 [Themes].\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_dark() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\nggthemes offers ‘ggplot2’ themes that emulate the visual style of plots created by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, The Wall Street Journal, and various others.\nIn the provided example, The Wall Street Journal theme is applied.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n\n\n\n\nAdditionally, ggthemes provides supplementary geoms and scales for ‘ggplot2’. To delve deeper into these features, refer to the accompanying vignette for more insights.\n\n\n\nThe hrbrthemes package offers a foundational theme that prioritises typographic elements, determining the placement of labels and specifying the fonts utilised.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second objective revolves around enhancing productivity within a production workflow. Specifically, the elements of hrbrthemes are intended to be employed within the context of this “production workflow.” For more detailed information, refer to this [vignette]((https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html).\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\nWhat can we learn from the code chunk above?\n\n[axis_title_size] argument is used to increase the font size of the axis title to 18\n[base_size] argument is used to increase the default axis label to 15\n[grid] argument is used to remove the x-axis grid lines\n\n\n\n\n\nIt is common to require multiple graphs to effectively convey a compelling visual narrative. Various ggplot2 extensions offer functions for composing figures with multiple graphs. In this section, we will discover how to generate a composite plot by combining three statistical graphics using the code chunk below:\nMaths\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\nEnglish\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\nFinally, we will generate a scatterplot illustrating the relationship between English scores and Maths scores, as demonstrated below.\nEnglish vs Maths\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\nVarious functions from ggplot2 extensions cater to the requirements of preparing composite figures by combining multiple graphs. Examples include grid.arrange() from the gridExtra package and plot_grid() from the cowplot package. There is a ggplot2 extension called patchwork, specifically designed for merging separate ggplot2 graphs into a unified figure.\nThe patchwork package features a straightforward syntax, allowing for the easy creation of layouts. The general syntax includes:\n\nA Two-Column Layout using the Plus Sign +\nParentheses () to establish a subplot group\nA Two-Row Layout using the Division Sign /\n\nThis simplicity in syntax makes patchwork an efficient tool for combining ggplot2 graphs seamlessly.\n\n\n\nThe figure in the tabset below displays a composite of two histograms, seamlessly created using patchwork. Take note of the simplicity in the syntax employed to generate this plot!\n\np1 + p2\n\n\n\n\n\n\n\nMore intricate composite figures can be constructed by employing appropriate operators. In the composite figure below, the following operators are utilised:\n\nThe | operator is used to stack two ggplot2 graphs vertically\nThe / operator is employed to position the plots next to each other horizontally\nThe () operator is utilised to define the sequence of the plotting operations\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nTo delve deeper into this topic, please refer to the documentation on Plot Assembly.\n\n\n\nTo facilitate the identification of subplots in text, patchwork includes auto-tagging capabilities, as illustrated in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nIn addition to offering functions for arranging plots based on a specified layout, patchwork introduces the inset_element() function. This feature allows the flexible placement of one or multiple plots or graphic elements on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThe figure below is generated by combining patchwork with the theme_wsj() from the ggthemes package, which was discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-necessary-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-necessary-libraries",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggrepel is an R package that offers geoms for ggplot2, enabling the repulsion of overlapping text labels\nggthemes is an R package that offers additional themes, geoms, and scales for ‘ggplot2’\nhrbrthemes is an R package that offers typography-centric themes and theme components for ggplot2\npatchwork is an R package designed for creating composite figures using ggplot2\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The exam_data tibble data frame comprises seven attributes in total.\n4 categorical data type:\n\nID\nCLASS\nGENDER\nRACE\n\n3 continuous data type:\n\nMATHS\nENGLISH\nSCIENCE\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "Plotting statistical graphs can be challenging, particularly when dealing with a large number of data points and the need for effective annotation. ggrepel serves as an extension of the ggplot2 package, offering geoms designed to repel overlapping text, as demonstrated in the examples on the right. To implement this functionality, you can seamlessly replace geom_text() with geom_text_repel() and geom_label() with geom_label_repel.\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggplot2 includes a set of eight built-in themes, each providing a distinct visual style. These themes are:\n\ntheme_gray()\ntheme_bw()\ntheme_classic()\ntheme_dark()\ntheme_light()\ntheme_linedraw()\ntheme_minimal()\ntheme_void()\n\nClick on this link for further information on ggplot2 [Themes].\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_dark() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\nggthemes offers ‘ggplot2’ themes that emulate the visual style of plots created by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, The Wall Street Journal, and various others.\nIn the provided example, The Wall Street Journal theme is applied.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n\n\n\n\nAdditionally, ggthemes provides supplementary geoms and scales for ‘ggplot2’. To delve deeper into these features, refer to the accompanying vignette for more insights.\n\n\n\nThe hrbrthemes package offers a foundational theme that prioritises typographic elements, determining the placement of labels and specifying the fonts utilised.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second objective revolves around enhancing productivity within a production workflow. Specifically, the elements of hrbrthemes are intended to be employed within the context of this “production workflow.” For more detailed information, refer to this [vignette]((https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html).\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\nWhat can we learn from the code chunk above?\n\n[axis_title_size] argument is used to increase the font size of the axis title to 18\n[base_size] argument is used to increase the default axis label to 15\n[grid] argument is used to remove the x-axis grid lines"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "It is common to require multiple graphs to effectively convey a compelling visual narrative. Various ggplot2 extensions offer functions for composing figures with multiple graphs. In this section, we will discover how to generate a composite plot by combining three statistical graphics using the code chunk below:\nMaths\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\nEnglish\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\nFinally, we will generate a scatterplot illustrating the relationship between English scores and Maths scores, as demonstrated below.\nEnglish vs Maths\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\nVarious functions from ggplot2 extensions cater to the requirements of preparing composite figures by combining multiple graphs. Examples include grid.arrange() from the gridExtra package and plot_grid() from the cowplot package. There is a ggplot2 extension called patchwork, specifically designed for merging separate ggplot2 graphs into a unified figure.\nThe patchwork package features a straightforward syntax, allowing for the easy creation of layouts. The general syntax includes:\n\nA Two-Column Layout using the Plus Sign +\nParentheses () to establish a subplot group\nA Two-Row Layout using the Division Sign /\n\nThis simplicity in syntax makes patchwork an efficient tool for combining ggplot2 graphs seamlessly.\n\n\n\nThe figure in the tabset below displays a composite of two histograms, seamlessly created using patchwork. Take note of the simplicity in the syntax employed to generate this plot!\n\np1 + p2\n\n\n\n\n\n\n\nMore intricate composite figures can be constructed by employing appropriate operators. In the composite figure below, the following operators are utilised:\n\nThe | operator is used to stack two ggplot2 graphs vertically\nThe / operator is employed to position the plots next to each other horizontally\nThe () operator is utilised to define the sequence of the plotting operations\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nTo delve deeper into this topic, please refer to the documentation on Plot Assembly.\n\n\n\nTo facilitate the identification of subplots in text, patchwork includes auto-tagging capabilities, as illustrated in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nIn addition to offering functions for arranging plots based on a specified layout, patchwork introduces the inset_element() function. This feature allows the flexible placement of one or multiple plots or graphic elements on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nThe figure below is generated by combining patchwork with the theme_wsj() from the ggthemes package, which was discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nggplot(data = exam_data, \n      aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "ggplot(data = exam_data, \n      aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications! In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "title": "In-class Exercise 01: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\n[haven] (https://www.tidyverse.org/)\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 01: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\n[haven] (https://www.tidyverse.org/)\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "title": "In-class Exercise 01: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  }
]