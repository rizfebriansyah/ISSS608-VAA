[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.4.1 Tooltip effect with tooltip aesthetic",
    "text": "3.4.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.5.1 Displaying multiple information on tooltip",
    "text": "3.5.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.1 Customising Tooltip style",
    "text": "3.6.1 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\n\n\n\n\n\n\nRefer to Customising girafe objects to learn more about how to customise ggiraph objects."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.2 Displaying statistics on tooltip",
    "text": "3.6.2 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.3 Hover effect with data_id aesthetic",
    "text": "3.6.3 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\n\n\n\n\nNote that the default value of the hover css is hover_css = “fill:orange;”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.4 Styling hover effect",
    "text": "3.6.4 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nNote: Different from previous example, in this example the ccs customisation request are encoded directly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.5 Combining tooltip and hover effect",
    "text": "3.6.5 Combining tooltip and hover effect\nThere are times that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.6 Click effect with onclick",
    "text": "3.6.6 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)     \n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.6.7 Coordinated Multiple Views with ggiraph",
    "text": "3.6.7 Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.7.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "3.7.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nThe plotThe code\n\n\n\n\n\n\n\n\nInteractive:\nClick on the colour symbol at the legend.\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.7.2 Working with visual variable: plot_ly() method",
    "text": "3.7.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.7.3 Creating an interactive scatter plot: ggplotly() method",
    "text": "3.7.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\nNotice that the only extra line you need to include in the code chunk is ggplotly()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.7.4 Coordinated Multiple Views with plotly",
    "text": "3.7.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected.\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk,"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.8.1 Interactive Data Table: DT package",
    "text": "3.8.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.8.2 Linked brushing: crosstalk method",
    "text": "3.8.2 Linked brushing: crosstalk method\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#ggiraph",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.9.1 ggiraph",
    "text": "3.9.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-for-r",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#plotly-for-r",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "3.9.2 plotly for R",
    "text": "3.9.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#basic-concepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#basic-concepts-of-animation",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.1.1 Basic concepts of animation",
    "text": "4.1.1 Basic concepts of animation\nIn the process of crafting animations, the plot itself remains static. Instead, numerous individual plots are constructed and subsequently assembled into sequences resembling movie frames, akin to the traditional method used in flip books or cartoons. Each frame represents a distinct plot capturing motion, constructed from a pertinent subset of the aggregated data. The interconnected frames, when combined, create the animated flow driven by the selected data subsets."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#terminology",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.1.2 Terminology",
    "text": "4.1.2 Terminology\nPrior to delving into the procedures for generating an animated statistical graph, it is crucial to familiarise ourselves with key concepts and terminology associated with this form of visualisation.\n\nFrame: Within an animated line graph, each frame corresponds to a distinct time point or category. As the frame transitions, the data points on the graph dynamically adjust to reflect the updated data.\nAnimation Attributes: These attributes encompass the settings dictating the behavior of the animation. For instance, one can specify the duration of each frame, the easing function facilitating transitions between frames, and whether the animation should commence from the current frame or from the outset.\n\n\n\n\n\n\n\nTip\n\n\n\nPrior to embarking on the creation of animated graphs, it is essential to consider whether the effort is justified. For exploratory data analysis, investing time in animated graphics might not be warranted. However, in a presentation setting, strategically incorporating a few well-designed animated graphics can significantly enhance the audience’s connection with your topic compared to static alternatives."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#loading-the-r-packages",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.2.1 Loading the R packages",
    "text": "4.2.1 Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\npackage ‘gifski’ successfully unpacked and MD5 sums checked\nThe downloaded binary packages are in C:4R_packages package ‘gapminder’ successfully unpacked and MD5 sums checked\nThe downloaded binary packages are in C:4R_packages package ‘gganimate’ successfully unpacked and MD5 sums checked\nThe downloaded binary packages are in C:4R_packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.2.2 Importing the data",
    "text": "4.2.2 Importing the data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nThings to learn from the code above\n\n\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_each_() of dplyr package is used to convert all character data type into factor.\nmutate` of dplyr package is used to convert data values of Year field into integer.\n\n\n\nUnfortunately, mutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.3.1 Building a static population bubble plot",
    "text": "4.3.1 Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.3.2 Building the animated bubble plot",
    "text": "4.3.2 Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.4.1 Building an animated bubble plot: ggplotly() method",
    "text": "4.4.1 Building an animated bubble plot: ggplotly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\nThe plotThe code\n\n\n\n\n\n\n\n\nThe animated bubble plot above includes a play/pause button and a slider component for controlling the animation\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nThings to learn from code above\n\n\n\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3: Programming Interactive Data Visualisation with R and Programming Animated Statistical Graphics with R",
    "section": "4.4.2 Building an animated bubble plot: plot_ly() method",
    "text": "4.4.2 Building an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "Within this section, we will explore various ggplot2 extensions that enhance the creation of refined and impactful statistical visuals. Upon completing this section, we will gain the ability to:\n\nPrecisely position annotations on a graph using functions from the ggrepel package.\nGenerate polished, publication-quality figures using functions from the ggthemes and hrbrthemes packages.\nConstruct composite figures by merging ggplot2 graphs with the patchwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-necessary-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-necessary-libraries",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.2.1 Importing the necessary libraries",
    "text": "2.2.1 Importing the necessary libraries\n\nggrepel is an R package that offers geoms for ggplot2, enabling the repulsion of overlapping text labels\nggthemes is an R package that offers additional themes, geoms, and scales for ‘ggplot2’\nhrbrthemes is an R package that offers typography-centric themes and theme components for ggplot2\npatchwork is an R package designed for creating composite figures using ggplot2\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.2.2 Importing data",
    "text": "2.2.2 Importing data\nThe exam_data tibble data frame comprises seven attributes in total.\n4 categorical data type:\n\nID\nCLASS\nGENDER\nRACE\n\n3 continuous data type:\n\nMATHS\nENGLISH\nSCIENCE\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.3.1 Working with ggrepel",
    "text": "2.3.1 Working with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.4.1 Working with ggtheme package",
    "text": "2.4.1 Working with ggtheme package\nggthemes offers ‘ggplot2’ themes that emulate the visual style of plots created by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, The Wall Street Journal, and various others.\nIn the provided example, The Wall Street Journal theme is applied.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n\n\n\n\nAdditionally, ggthemes provides supplementary geoms and scales for ‘ggplot2’. To delve deeper into these features, refer to the accompanying vignette for more insights."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.4.2 Working with hrbthems package",
    "text": "2.4.2 Working with hrbthems package\nThe hrbrthemes package offers a foundational theme that prioritises typographic elements, determining the placement of labels and specifying the fonts utilised.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second objective revolves around enhancing productivity within a production workflow. Specifically, the elements of hrbrthemes are intended to be employed within the context of this “production workflow.” For more detailed information, refer to this [vignette]((https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html).\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nWhat can we learn from the code chunk above?\n\naxis_title_size argument is used to increase the font size of the axis title to 18\nbase_size argument is used to increase the default axis label to 15\ngrid argument is used to remove the x-axis grid lines"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.5.1 Creating Composite Graphics: pathwork methods",
    "text": "2.5.1 Creating Composite Graphics: pathwork methods\nVarious functions from ggplot2 extensions cater to the requirements of preparing composite figures by combining multiple graphs. Examples include grid.arrange() from the gridExtra package and plot_grid() from the cowplot package. There is a ggplot2 extension called patchwork, specifically designed for merging separate ggplot2 graphs into a unified figure.\nThe patchwork package features a straightforward syntax, allowing for the easy creation of layouts. The general syntax includes:\n\nA Two-Column Layout using the Plus Sign +\nParentheses () to establish a subplot group\nA Two-Row Layout using the Division Sign /\n\nThis simplicity in syntax makes patchwork an efficient tool for combining ggplot2 graphs seamlessly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.5.2 Combining two ggplot2 graphs",
    "text": "2.5.2 Combining two ggplot2 graphs\nThe figure in the tabset below displays a composite of two histograms, seamlessly created using patchwork. Take note of the simplicity in the syntax employed to generate this plot!\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.5.3 Combining three ggplot2 graphs",
    "text": "2.5.3 Combining three ggplot2 graphs\nMore intricate composite figures can be constructed by employing appropriate operators. In the composite figure below, the following operators are utilised:\n\nThe | operator is used to stack two ggplot2 graphs vertically\nThe / operator is employed to position the plots next to each other horizontally\nThe () operator is utilised to define the sequence of the plotting operations\n\n\n(p1 / p2) | p3\n\n\n\n\nTo delve deeper into this topic, please refer to the documentation on Plot Assembly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.5.4 Creating a composite figure with tag",
    "text": "2.5.4 Creating a composite figure with tag\nTo facilitate the identification of subplots in text, patchwork includes auto-tagging capabilities, as illustrated in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.5.5 Creating figure with insert",
    "text": "2.5.5 Creating figure with insert\nIn addition to offering functions for arranging plots based on a specified layout, patchwork introduces the inset_element() function. This feature allows the flexible placement of one or multiple plots or graphic elements on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "2.5.6 Creating a composite figure by using patchwork and ggtheme\nThe figure below is generated by combining patchwork with the theme_wsj() from the ggthemes package, which was discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "This chapter introduces fundamental principles and key elements of ggplot2. We will simultaneously acquire practical skills in utilising these elements to generate statistical graphics, following the principles of the Layered Grammar of Graphics. By the conclusion of this chapter, we will have the ability to employ ggplot2’s essential graphical components to craft sophisticated and functional statistical visuals."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "1.2.1 Install and launching R packages",
    "text": "1.2.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "1.2.2 Importing the data",
    "text": "1.2.2 Importing the data\nWe bring exam_data.csv into the R environment using the read.csv() function and then assign it to the variable exam_data.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nIn R, the conventional format for creating objects and assignment statements is as follows:\n\nobject_name &lt;- value\n\nWe can use glimpse( ) and summary( ) to quickly inspect exam_data.\n\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;dbl&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;dbl&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;dbl&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "1.31 R Graphics vs ggplot",
    "text": "1.31 R Graphics vs ggplot\nLet’s examine the differences in how R Graphics, encompassing the fundamental graphical functions of Base R, and ggplot2, create a basic histogram.\n\nBase Rggplot\n\n\n\nhist(exam_data$MATHS, col = '#5e82c9')\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill='#5e82c9') +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nWhile the code is more straightforward with R Graphics, Hadley Wickham emphasises that the valuable skills gained from ggplot2 extend beyond mere plotting syntax. Instead, they involve adopting a potent mindset for visualization, considering it as a method to map between variables and the visual characteristics of geometric objects that are perceptible.\n\n\n\n\n\n\nImportant\n\n\n\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data = exam_data, \n      aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1",
    "section": "1.7.1 Geometric Objects: geom_bar()",
    "text": "1.7.1 Geometric Objects: geom_bar()\nThe code chunk below plots a bar chart by using geom_bar(https://ggplot2.tidyverse.org/reference/geom_bar.html).\naes(x=RACE) defines “RACE” as the x-axis.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1",
    "section": "1.7.2 Geometric Objects: geom_dotplot()",
    "text": "1.7.2 Geometric Objects: geom_dotplot()\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nBelow, we use geom_dotplot() to plot a dot plot of math scores.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis,\nand binwidth argument is used to change the binwidth to 2.5.\n\n\n\nWe insert 2 additional arguments in geom_dotplot()\n\n‘binwidth’ which refers to group ranges\n‘dotsize’ which scales the size of the dots.\n\nThe function scale_y_continuous() is also added to turn off the y-axis by setting it to NULL.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5,\n               color=\"black\", \n               fill='#5e82c9') +\n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1",
    "section": "1.7.3 Geometric Objects: geom_histogram()",
    "text": "1.7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1",
    "section": "1.7.4 Modifying a geometric object by changing geom()",
    "text": "1.7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1",
    "section": "1.7.5 Modifying a geometric object by changing aes",
    "text": "1.7.5 Modifying a geometric object by changing aes\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1",
    "section": "1.7.6 Geometric objects: geom-density()",
    "text": "1.7.6 Geometric objects: geom-density()\ngeom-density computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1",
    "section": "1.7.7 Geometric objects: geom_boxplot",
    "text": "1.7.7 Geometric objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually. The code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_viloin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_viloin",
    "title": "Hands-on Exercise 1",
    "section": "1.7.8 Geometric objects: geom_viloin",
    "text": "1.7.8 Geometric objects: geom_viloin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1",
    "section": "1.7.9 Geometric objects: geom_point()",
    "text": "1.7.9 Geometric objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point-1",
    "title": "Hands-on Exercise 1",
    "section": "1.7.10 Geometric objects: geom_point()",
    "text": "1.7.10 Geometric objects: geom_point()\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1",
    "section": "1.8.1 Working with stat()",
    "text": "1.8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1",
    "section": "1.8.2 Working with stat - the stat_summary() method",
    "text": "1.8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1",
    "section": "1.8.3 Working with stat - the geom() method",
    "text": "1.8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1",
    "section": "1.8.4 Adding a best fit curve on a scatterplot?",
    "text": "1.8.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point()\n\n\n\n\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess.\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "1.9.1 Working with facet_wrap()",
    "text": "1.9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1",
    "section": "1.9.2 facet_grid() function",
    "text": "1.9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1",
    "section": "1.10.1 Working with Coordinate",
    "text": "1.10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1",
    "section": "1.10.2 Changing the y- and x-axis range",
    "text": "1.10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "1.11.1 Working with theme",
    "text": "1.11.1 Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Step into the captivating world of ISSS608 Visual Analytics and Applications! Brace yourself for an immersive journey as you explore this digital realm, where my coursework for this course comes to life. Get ready to embark on a visual odyssey that goes beyond the ordinary – a fusion of knowledge and creativity awaits you within these virtual corridors!\n\n\n\nPicture from: MattD, Former Alteryx, Inc. Support Engineer, Community Data Architect, Data Scientist then Data Engineer\n\n\n\n\n\n\n\n\nJoke: Why did the scatter plot go to therapy?\n\n\n\n\n\nIt couldn’t handle the emotional baggage of its outliers!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Andreas Schleicher, the education director of OECD, conveyed in a BBC article that Singapore has achieved excellence without significant disparities between children from affluent and underprivileged families (2016). Additionally, several Ministers for Education in Singapore have adopted the slogan “every school a good school.” Despite these efforts, the prevailing public opinion strongly suggests the presence of disparities, particularly between elite and neighbourhood schools, among students from families with varying socioeconomic statuses, and between immigration and non-immigration families.\n\n\n\nThe data that we will be using would be the 2022 Programme for International Student Assessment (PISA), which evaluates education systems globally by testing 15-year-old students in mathematics, reading, and science.\nBy employing some EDA, we would want to find out:\n\nThe distribution of Singaporean students’ proficiency in mathematics, reading and science\nThe correlation between these performance levels and factors such as schools, gender and the socioeconomic status of the students"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Andreas Schleicher, the education director of OECD, conveyed in a BBC article that Singapore has achieved excellence without significant disparities between children from affluent and underprivileged families (2016). Additionally, several Ministers for Education in Singapore have adopted the slogan “every school a good school.” Despite these efforts, the prevailing public opinion strongly suggests the presence of disparities, particularly between elite and neighbourhood schools, among students from families with varying socioeconomic statuses, and between immigration and non-immigration families."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#our-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#our-task",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "The data that we will be using would be the 2022 Programme for International Student Assessment (PISA), which evaluates education systems globally by testing 15-year-old students in mathematics, reading, and science.\nBy employing some EDA, we would want to find out:\n\nThe distribution of Singaporean students’ proficiency in mathematics, reading and science\nThe correlation between these performance levels and factors such as schools, gender and the socioeconomic status of the students"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-r-packages",
    "title": "Take-home Exercise 1",
    "section": "2.1 Loading R packages",
    "text": "2.1 Loading R packages\nIn this take-home exercise, tidyverse and haven packages will be used.\nAlso, we will be using these packages listed below:\n\nggrepel is an R package that offers geoms for ggplot2, enabling the repulsion of overlapping text labels\nggthemes is an R package that offers additional themes, geoms, and scales for ‘ggplot2’\nhrbrthemes is an R package that offers typography-centric themes and theme components for ggplot2\npatchwork is an R package designed for creating composite figures using ggplot2\ndplyr is a data manipulation package in R that offers a consistent set of functions, or verbs, to address common data manipulation tasks. It includes functions such as ‘mutate()’ for creating new variables, ‘select()’ for choosing variables by name, ‘filter()’ for selecting cases based on values, ‘summarise()’ for reducing multiple values to a single summary, and ‘arrange()’ for changing the row ordering in a dataset.\n\nnote: The tidyverse package is an “umbrella-package” that installs tidyr, dplyr and several other useful packages for data analysis, such as ggplot2, tibble, etc.\nThe code chunk used is as follows:\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes, dplyr, ggdist, ggridges,\n               tidyverse, haven)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-dataset",
    "title": "Take-home Exercise 1",
    "section": "2.2 Importing the dataset",
    "text": "2.2 Importing the dataset\nOne dataset from PISA is provided for this task, specifically the Student questionnaire data file: cy08msp_stu_qqq.sas7bdat\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#filtering-data-from-singapore-only",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#filtering-data-from-singapore-only",
    "title": "Take-home Exercise 1",
    "section": "2.3 Filtering data from Singapore only",
    "text": "2.3 Filtering data from Singapore only\nSince our task is to find out students’ performance in various subjects and relationship of performances with regards to other variables in Singapore, we would need to filter data to only include Singapore. Since there is a CNT column, which is a Country column, we will filter it to only include SGP (Singapore).\nThe code chunk to filter SGP only:\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nSince the original data is huge in file size, we will save the Singapore filtered data as stu_qqq_SG in the data folder.\nThe code chunk to save filtered data as stu_qqq_SG:\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\nTherefore, we will only read the stu_qqq_SG.rds file from now onwards.\nThe code chunk to read stu_qqq_SG.rds file:\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-stu_qqq_sg-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-stu_qqq_sg-data",
    "title": "Take-home Exercise 1",
    "section": "2.4 Summary Statistics of stu_qqq_SG data",
    "text": "2.4 Summary Statistics of stu_qqq_SG data\nTo check if we have filtered the correct data to include SG only, we will be displaying first 10 rows using head():\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1,279\n   CNT   CNTRYID CNTSCHID CNTSTUID CYC   NatCen STRATUM SUBNATIO REGION  OECD\n   &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 SGP       702 70200052 70200001 08MS  070200 SGP01   7020000   70200     0\n 2 SGP       702 70200134 70200002 08MS  070200 SGP01   7020000   70200     0\n 3 SGP       702 70200112 70200003 08MS  070200 SGP01   7020000   70200     0\n 4 SGP       702 70200004 70200004 08MS  070200 SGP01   7020000   70200     0\n 5 SGP       702 70200152 70200005 08MS  070200 SGP01   7020000   70200     0\n 6 SGP       702 70200043 70200006 08MS  070200 SGP01   7020000   70200     0\n 7 SGP       702 70200049 70200007 08MS  070200 SGP01   7020000   70200     0\n 8 SGP       702 70200107 70200008 08MS  070200 SGP01   7020000   70200     0\n 9 SGP       702 70200012 70200009 08MS  070200 SGP01   7020000   70200     0\n10 SGP       702 70200061 70200010 08MS  070200 SGP01   7020000   70200     0\n# ℹ 1,269 more variables: ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;,\n#   LANGTEST_COG &lt;dbl&gt;, LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;,\n#   Option_ICTQ &lt;dbl&gt;, Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;,\n#   Option_UH &lt;dbl&gt;, BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;,\n#   ST003D03T &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;,\n#   ST250Q03JA &lt;dbl&gt;, ST250Q04JA &lt;dbl&gt;, ST250Q05JA &lt;dbl&gt;, ST250D06JA &lt;chr&gt;,\n#   ST250D07JA &lt;chr&gt;, ST251Q01JA &lt;dbl&gt;, ST251Q02JA &lt;dbl&gt;, ST251Q03JA &lt;dbl&gt;, …\n\n\n\n\n\nhead(stu_qqq_SG,10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-subjects-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-subjects-data",
    "title": "Take-home Exercise 1",
    "section": "2.5 Preparing Subjects Data",
    "text": "2.5 Preparing Subjects Data\nIn order to assess students’ performance in various subjects, including Mathematics, Reading and Science, we must identify the columns that correspond to these specific subjects.\nWith reference to PISA website, we can utilise plausible estimates for assessing student proficiency. PISA evaluates student achievement using plausible values (PVs), derived from Item Response Theory models (refer to Chapter 5 of the PISA Data Analysis Manual: SAS or SPSS, Second Edition, or the accompanying guide “Scaling of Cognitive Data and Use of Students Performance Estimates” for detailed information). These models fundamentally deduce a student’s ability from their test performance. In application, plausible values are produced through multiple imputations, considering pupils’ responses to the randomly assigned subset of test questions and their input in background questionnaires.\n\n2.5.1 Preparing Maths Data\nAfter looking through the dataset, we have determined that the columns denoting Mathematics performance are PV1MATH to PV10MATH.\nConsequently, we will compute the average of these plausible values using the rowMeans() function. A new column, called MATHEMATICS, will be generated to store the calculated average plausible values for the Mathematics subject.\nThe corresponding code snippet is as follows:\n\n# Select the columns containing math plausible values\nmath_columns &lt;- stu_qqq_SG[, c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")]\n\n# Calculate the row-wise mean\nmath_row_means &lt;- rowMeans(math_columns)\n\n# Add the row means as a new column to the data frame\nstu_qqq_SG$MATHEMATICS &lt;- math_row_means\n\n\n\n2.5.2 Preparing Reading Data\nSimilarly, upon close examination of the dataset, we have identified that the columns associated with Reading are PV1READ to PV10READ.\nAs a result, we will calculate the average of these plausible values using the rowMeans() function. A new column, labeled READING, will be created to store the resulting average plausible values for the Reading subject.\nThe corresponding code snippet is provided below:\n\n# Select the columns containing read plausible values\nreading_columns &lt;- stu_qqq_SG[, c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")]\n\n# Calculate the row-wise mean\nreading_row_means &lt;- rowMeans(reading_columns)\n\n# Add the row means as a new column to the data frame\nstu_qqq_SG$READING &lt;- reading_row_means\n\n\n\n2.5.3 Preparing Science Data\nLastly, upon a thorough review of the dataset, we have determined that the columns corresponding to Science are PV1SCIE to PV10SCIE.\nConsequently, we will use the rowMeans() function to compute the average of these plausible values. A new column, named SCIENCE, will be established to store the resulting average plausible values for the Science subject.\nThe corresponding code snippet is provided below:\n\n# Select the columns containing science plausible values\nscience_columns &lt;- stu_qqq_SG[, c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")]\n\n# Calculate the row-wise mean\nscience_row_means &lt;- rowMeans(science_columns)\n\n# Add the row means as a new column to the data frame\nstu_qqq_SG$SCIENCE &lt;- science_row_means"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-gender-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-gender-data",
    "title": "Take-home Exercise 1",
    "section": "2.6 Preparing Gender Data",
    "text": "2.6 Preparing Gender Data\nUpon examining the dataset, a particular column labeled ‘ST004D01T’ provides information about gender, using the values 1 and 2. According to the PISA questionnaire manual, 1 corresponds to female, while 2 corresponds to male.\nTo facilitate a more straightforward analysis, we intend to recode the values, assigning 1 to represent female and 2 to represent male. This recoding process will be carried out using the dplyr, a component of the tidyverse package.\nWe prefer generating a new column instead of altering the current one. To achieve this, employ the mutate function in conjunction with the assignment operator (=) to establish a fresh column.\nThis action will introduce a column named ‘GENDER’ into your ‘stu_qqq_SG’ dataset, with values redefined according to the ‘ST004D01T’ column. The original ‘ST004D01T’ column retains its original state, and now, a newly created ‘GENDER’ column contains the recoded values.”\nThe following code snippet provides the pertinent information:\n\n# Install and load the dplyr package if we have not done so\n# install.packages(\"dplyr\")\nlibrary(dplyr)\n\n# Create a new column 'GENDER' with recoded values\nstu_qqq_SG &lt;- stu_qqq_SG %&gt;%\n  mutate(GENDER = recode(ST004D01T, \"1\" = \"female\", \"2\" = \"male\"))\n\nTo check if we have recoded the gender data correctly, we will be displaying the first 10 rows of the GENDER column:\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1\n   GENDER\n   &lt;chr&gt; \n 1 female\n 2 male  \n 3 male  \n 4 male  \n 5 female\n 6 female\n 7 male  \n 8 male  \n 9 female\n10 male  \n\n\n\n\n\nhead(stu_qqq_SG[c(\"GENDER\")],10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-socioeconomic-status-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-socioeconomic-status-data",
    "title": "Take-home Exercise 1",
    "section": "2.7 Preparing Socioeconomic Status Data",
    "text": "2.7 Preparing Socioeconomic Status Data\nWith reference to the PISA 2022 Technical Report, Figure 5.1 in the PISA 2022 Technical Report illustrates the two-dimensional framework taxonomy. The primary dimension categorises proposed constructs into two overarching categories defined by the PISA Governing Board (PGB): domain-specific constructs and general constructs, with the latter encompassing Economic, Social and Cultural Status (ESCS). The secondary dimension further categorises proposed constructs into five categories based on key areas of educational policy setting at different levels of aggregation. These categories include Student Background, Student Beliefs, Attitudes, Feelings. and Behaviours, Teaching Practices and Learning Opportunities, School Practices, Policies, and Infrastructure, and Governance, System-Level Policies, and Practices.\nTherefore, it can be inferred that the ‘ESCS’ column can be utilised for assessing the socioeconomic status of students.\nIf we view the ‘ESCS’ column, there are negative and positive ESCS values, it generally implies a relative positioning of students along a spectrum of economic, social and cultural advantages or disadvantages.\n\nPositive ESCS value: This typically indicates a higher socioeconomic status, suggesting that the student comes from an environment with more favourable economic conditions, higher social standing, and a richer cultural background. Students with positive ESCS values may have access to more resources, educational support and opportunities.\nNegative ESCS value: Conversely, a negative ESCS value suggests a lower socioeconomic status. Students with negative ESCS values may face economic challenges, have a lower social standing, and possibly experience a less enriched cultural environment. These students may encounter additional obstacles in their educational journey due to a lack of resources or support.\n\nThe first 10 rows of the ESCS column can be seen here:\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1\n      ESCS\n     &lt;dbl&gt;\n 1  0.184 \n 2  0.826 \n 3 -1.04  \n 4 -0.961 \n 5  0.0856\n 6  0.127 \n 7 -0.0154\n 8  1.16  \n 9  1.47  \n10  0.520 \n\n\n\n\n\nhead(stu_qqq_SG[c(\"ESCS\")],10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-school-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#preparing-school-data",
    "title": "Take-home Exercise 1",
    "section": "2.8 Preparing School Data",
    "text": "2.8 Preparing School Data\nExploring the dataset reveals a sole column dedicated to schools, labeled ‘CNTSCHID.’ Regrettably, the dataset lacks details about the nature of CNTSCHID or the specific identity associated with each school ID. Nonetheless, we must work with the available information as is.\nThe first 10 rows of the CNTSCHID column can be seen here:\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1\n   CNTSCHID\n      &lt;dbl&gt;\n 1 70200052\n 2 70200134\n 3 70200112\n 4 70200004\n 5 70200152\n 6 70200043\n 7 70200049\n 8 70200107\n 9 70200012\n10 70200061\n\n\n\n\n\nhead(stu_qqq_SG[c(\"CNTSCHID\")],10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#three-subjects---mathematics-reading-and-science",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#three-subjects---mathematics-reading-and-science",
    "title": "Take-home Exercise 1",
    "section": "3.1 Three Subjects - Mathematics, Reading and Science",
    "text": "3.1 Three Subjects - Mathematics, Reading and Science\n\n3.1.1 Distribution Across Three Subjects - Mathematics, Reading and Science\nWe will now do the plot for each respective subject. We will be doing a histogram to show the distribution across three subjects.\nThe code will be shown below:\n\nMathematicsReadingScience\n\n\n\np1 &lt;- ggplot(data=stu_qqq_SG, \n             aes(x = MATHEMATICS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"light blue\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") +\n  geom_vline(xintercept = mean(stu_qqq_SG$MATHEMATICS), \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1)\n\n\n\n\np2 &lt;- ggplot(data=stu_qqq_SG, \n             aes(x = READING)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"light blue\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Reading scores\") +\n  geom_vline(xintercept = mean(stu_qqq_SG$READING), \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1)\n\n\n\n\np3 &lt;- ggplot(data=stu_qqq_SG, \n             aes(x = SCIENCE)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"light blue\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Science scores\") +\n  geom_vline(xintercept = mean(stu_qqq_SG$SCIENCE), \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1) \n\n\n\n\nThe figure in the tabset below displays a composite of three histograms, seamlessly created using patchwork. This is specifically designed for merging separate ggplot2 graphs into a unified figure. The red dotted line indicates the mean.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nThe histogram presented above offers a visual representation of the distribution of scores across three academic subjects: MATHEMATICS, READING and SCIENCE. The distribution pattern observed for each subject strongly aligns with the characteristics of a normal distribution.\nA normal distribution is characterised by a symmetrical bell-shaped curve, with the majority of data points clustering around the mean and gradually tapering off towards the extremes. In the context of academic performance, this implies that a significant proportion of students scored close to the average, while fewer students achieved scores either significantly above or below the mean. In the case of academic assessments, a normal distribution suggests that the difficulty level of the questions was appropriately balanced, allowing for a diverse range of scores among the students.\n\n\n3.1.2 Reading vs Mathematics\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG, \n       aes(x= READING, \n           y=MATHEMATICS)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(150,850),\n                  ylim=c(150,850))\n\n\n\n\nThe scatterplot depicted above illustrates a positive correlation between reading and mathematics values. As the reading values increase, so do the corresponding mathematics values. This relationship is further emphasised by the upward trend observed in the best fit line. The consistent increase in one variable is mirrored by a proportional increase in the other. In light of these findings, it can be confidently asserted that a positive connection exists, suggesting that engaging in reading contributes to enhanced performance in mathematics among students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#reading-as-our-main-focus",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#reading-as-our-main-focus",
    "title": "Take-home Exercise 1",
    "section": "3.2 “Reading” as our main focus",
    "text": "3.2 “Reading” as our main focus\nWith reference to this research paper titled ‘Reading matters more than mathematics in science learning: an analysis of the relationship between student achievement in reading, mathematics, and science’ by Yuanze Zhu, the results revealed that proficiency in reading and mathematics strongly correlated with science achievement, with reading exerting a more substantial influence than mathematics. Consequently, we assert that prioritising reading over mathematics is essential for enhanced performance in science learning.\nHenceforth, our focus will be exclusively on reading, considering it as the primary driver for improved achievement in other subjects, including Mathematics and Science.\n\n3.2.1 Reading vs Gender\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG, \n       aes(y = READING, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=2)      \n\n\n\n\nWhen it comes to the Reading, females exhibit a higher average performance compared to their male counterparts. The visual representation underscores a clear distinction, suggesting that, on average, females outperform males in the domain of Reading. One plausible interpretation for this observed trend could be rooted in the varying learning styles or preferences between genders. Research has suggested that females may, on average, possess certain cognitive strengths or approaches that align more closely with the skills demanded in Reading tasks. Additionally, sociocultural factors and educational environments may play a role in shaping differential outcomes, influencing how males and females engage with and excel in Reading-related activities.\n\n\n3.2.2 Reading vs Socioeconomic Status (ESCS)\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG, \n       aes(x= READING, y=ESCS)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\nExamining the scatterplot above, it becomes evident that within the reading value range of 200-400, there is minimal correlation with ESCS. During this range, ESCS values exhibit considerable variability, ranging from -3 to 3. However, as reading values surpass 400, ESCS values predominantly hover around 0 and above, indicating a positive relationship. In other words, higher reading values correspond to higher ESCS values. This positive association is further emphasised by the upward trend observed in the best-fit line.\n\n\n3.2.3 Reading vs School ID\nGiven the extensive size of the dataset, our strategy is to concentrate on the top 5 schools that exhibit the highest frequency. Achieving this involves tallying the occurrences of School IDs in the CNTSCHID column.\nTo obtain the counts of each unique CNTSCHID value in descending order, we can use the table() function along with sorting functions.\n\nThe codeThe output\n\n\n\n# Our dataframe is named stu_qqq_SG and the column is CNTSCHID\nschid_counts &lt;- table(stu_qqq_SG$CNTSCHID)\n\n# Convert the result to a data frame and sort in descending order\nschid_counts_df &lt;- as.data.frame(schid_counts)\nschid_counts_df &lt;- schid_counts_df[order(-schid_counts_df$Freq), ]\n\n# Print or use the schid_counts_df as needed\nprint(schid_counts_df)\n\n\n\n\n\n        Var1 Freq\n20  70200020   60\n75  70200075   60\n158 70200159   59\n13  70200013   58\n45  70200045   58\n66  70200066   58\n141 70200141   58\n12  70200012   57\n40  70200040   57\n62  70200062   57\n105 70200105   57\n110 70200110   57\n118 70200118   57\n132 70200132   57\n4   70200004   56\n11  70200011   56\n26  70200026   56\n31  70200031   56\n35  70200035   56\n49  70200049   56\n67  70200067   56\n71  70200071   56\n82  70200082   56\n94  70200094   56\n130 70200130   56\n1   70200001   55\n44  70200044   55\n52  70200052   55\n111 70200111   55\n142 70200142   55\n145 70200145   55\n154 70200155   55\n27  70200027   54\n43  70200043   54\n119 70200119   54\n139 70200139   54\n18  70200018   52\n114 70200114   51\n38  70200038   40\n90  70200090   40\n112 70200112   40\n128 70200128   40\n150 70200151   40\n161 70200162   40\n17  70200017   39\n19  70200019   39\n29  70200029   39\n53  70200053   39\n59  70200059   39\n61  70200061   39\n63  70200063   39\n65  70200065   39\n68  70200068   39\n84  70200084   39\n104 70200104   39\n106 70200106   39\n131 70200131   39\n137 70200137   39\n164 70200165   39\n2   70200002   38\n5   70200005   38\n7   70200007   38\n8   70200008   38\n25  70200025   38\n36  70200036   38\n64  70200064   38\n73  70200073   38\n92  70200092   38\n93  70200093   38\n116 70200116   38\n126 70200126   38\n134 70200134   38\n140 70200140   38\n146 70200146   38\n151 70200152   38\n16  70200016   37\n21  70200021   37\n22  70200022   37\n32  70200032   37\n39  70200039   37\n42  70200042   37\n46  70200046   37\n47  70200047   37\n74  70200074   37\n76  70200076   37\n80  70200080   37\n85  70200085   37\n86  70200086   37\n87  70200087   37\n108 70200108   37\n117 70200117   37\n120 70200120   37\n121 70200121   37\n127 70200127   37\n135 70200135   37\n136 70200136   37\n144 70200144   37\n152 70200153   37\n155 70200156   37\n162 70200163   37\n163 70200164   37\n3   70200003   36\n6   70200006   36\n9   70200009   36\n10  70200010   36\n14  70200014   36\n24  70200024   36\n34  70200034   36\n37  70200037   36\n48  70200048   36\n51  70200051   36\n54  70200054   36\n58  70200058   36\n70  70200070   36\n81  70200081   36\n83  70200083   36\n88  70200088   36\n89  70200089   36\n96  70200096   36\n99  70200099   36\n102 70200102   36\n103 70200103   36\n109 70200109   36\n122 70200122   36\n125 70200125   36\n129 70200129   36\n143 70200143   36\n159 70200160   36\n160 70200161   36\n23  70200023   35\n55  70200055   35\n77  70200077   35\n91  70200091   35\n97  70200097   35\n101 70200101   35\n107 70200107   35\n133 70200133   35\n153 70200154   35\n15  70200015   34\n72  70200072   34\n98  70200098   34\n100 70200100   34\n113 70200113   34\n156 70200157   34\n33  70200033   33\n56  70200056   33\n69  70200069   33\n115 70200115   33\n123 70200123   32\n124 70200124   32\n79  70200079   31\n148 70200148   31\n30  70200030   30\n50  70200050   30\n147 70200147   30\n60  70200060   29\n157 70200158   29\n57  70200057   28\n95  70200095   28\n149 70200149   28\n28  70200028   22\n78  70200078   22\n138 70200138   15\n41  70200041    5\n\n\n\n\n\nFrom the output, we can see that the top 5 School IDs are:\n\n70200020\n70200075\n70200159\n70200013\n70200045\n\nTherefore, we will only focus on the above mentioned School IDs for our analysis.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n# Filter the data for specific values of CNTSCHID\nfiltered_data &lt;- stu_qqq_SG %&gt;%\n  filter(CNTSCHID %in% c(70200020, 70200075, 70200159, 70200013, 70200045))\n\n# Convert CNTSCHID to factor\nfiltered_data$CNTSCHID &lt;- as.factor(filtered_data$CNTSCHID)\n\n# Create the plot with the filtered data\nggplot(data = filtered_data, \n       aes(y = READING, x = CNTSCHID)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\",        \n             fun.y = \"mean\",           \n             colour = \"red\",          \n             size = 2)\n\n\n\n\nUpon a detailed analysis of the boxplot, which visually encapsulates the distribution of Reading plausible values across multiple schools (identified by CNTSCHID), a distinct trend emerges. Notably, CNTSCHID 70200020, representing a specific school within the dataset, stands out with the highest mean Reading score, hovering around an impressive ~630. This observation sheds light on the academic performance of this particular school, suggesting a noteworthy level of achievement in Reading compared to the other four schools. The boxplot serves as a valuable tool in visually conveying these distributional nuances, highlighting the academic prowess of CNTSCHID 70200020 within the context of Reading achievement among the schools."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Andreas Schleicher, the education director of OECD, conveyed in a BBC article that Singapore has achieved excellence without significant disparities between children from affluent and underprivileged families (2016). Additionally, several Ministers for Education in Singapore have adopted the slogan “every school a good school.” Despite these efforts, the prevailing public opinion strongly suggests the presence of disparities, particularly between elite and neighbourhood schools, among students from families with varying socioeconomic statuses, and between immigration and non-immigration families.\n\n\n\nThe data that we will be using would be the 2022 Programme for International Student Assessment (PISA), which evaluates education systems globally by testing 15-year-old students in mathematics, reading, and science.\nBy employing some EDA, we would want to find out:\n\nThe distribution of Singaporean students’ proficiency in mathematics, reading and science\nThe correlation between these performance levels and factors such as schools, gender and the socioeconomic status of the students"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#setting-the-scene",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Andreas Schleicher, the education director of OECD, conveyed in a BBC article that Singapore has achieved excellence without significant disparities between children from affluent and underprivileged families (2016). Additionally, several Ministers for Education in Singapore have adopted the slogan “every school a good school.” Despite these efforts, the prevailing public opinion strongly suggests the presence of disparities, particularly between elite and neighbourhood schools, among students from families with varying socioeconomic statuses, and between immigration and non-immigration families."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#our-task",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#our-task",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "The data that we will be using would be the 2022 Programme for International Student Assessment (PISA), which evaluates education systems globally by testing 15-year-old students in mathematics, reading, and science.\nBy employing some EDA, we would want to find out:\n\nThe distribution of Singaporean students’ proficiency in mathematics, reading and science\nThe correlation between these performance levels and factors such as schools, gender and the socioeconomic status of the students"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#loading-r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#loading-r-packages",
    "title": "Take-home Exercise 2",
    "section": "2.1 Loading R packages",
    "text": "2.1 Loading R packages\nIn this take-home exercise, tidyverse and haven packages will be used.\nAlso, we will be using these packages listed below:\n\nggrepel is an R package that offers geoms for ggplot2, enabling the repulsion of overlapping text labels\nggthemes is an R package that offers additional themes, geoms, and scales for ‘ggplot2’\nhrbrthemes is an R package that offers typography-centric themes and theme components for ggplot2\npatchwork is an R package designed for creating composite figures using ggplot2\ndplyr is a data manipulation package in R that offers a consistent set of functions, or verbs, to address common data manipulation tasks. It includes functions such as ‘mutate()’ for creating new variables, ‘select()’ for choosing variables by name, ‘filter()’ for selecting cases based on values, ‘summarise()’ for reducing multiple values to a single summary, and ‘arrange()’ for changing the row ordering in a dataset.\n\nnote: The tidyverse package is an “umbrella-package” that installs tidyr, dplyr and several other useful packages for data analysis, such as ggplot2, tibble, etc.\nThe code chunk used is as follows:\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes, dplyr, ggdist, ggridges,\n               tidyverse, haven)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-the-dataset",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-the-dataset",
    "title": "Take-home Exercise 2",
    "section": "2.2 Importing the dataset",
    "text": "2.2 Importing the dataset\nOne dataset from PISA is provided for this task, specifically the Student questionnaire data file: cy08msp_stu_qqq.sas7bdat\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#filtering-data-from-singapore-only",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#filtering-data-from-singapore-only",
    "title": "Take-home Exercise 2",
    "section": "2.3 Filtering data from Singapore only",
    "text": "2.3 Filtering data from Singapore only\nSince our task is to find out students’ performance in various subjects and relationship of performances with regards to other variables in Singapore, we would need to filter data to only include Singapore. Since there is a CNT column, which is a Country column, we will filter it to only include SGP (Singapore).\nThe code chunk to filter SGP only:\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nSince the original data is huge in file size, we will save the Singapore filtered data as stu_qqq_SG in the data folder.\nThe code chunk to save filtered data as stu_qqq_SG:\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\nTherefore, we will only read the stu_qqq_SG.rds file from now onwards.\nThe code chunk to read stu_qqq_SG.rds file:\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#summary-statistics-of-stu_qqq_sg-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#summary-statistics-of-stu_qqq_sg-data",
    "title": "Take-home Exercise 2",
    "section": "2.4 Summary Statistics of stu_qqq_SG data",
    "text": "2.4 Summary Statistics of stu_qqq_SG data\nTo check if we have filtered the correct data to include SG only, we will be displaying first 10 rows using head():\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1,279\n   CNT   CNTRYID CNTSCHID CNTSTUID CYC   NatCen STRATUM SUBNATIO REGION  OECD\n   &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1 SGP       702 70200052 70200001 08MS  070200 SGP01   7020000   70200     0\n 2 SGP       702 70200134 70200002 08MS  070200 SGP01   7020000   70200     0\n 3 SGP       702 70200112 70200003 08MS  070200 SGP01   7020000   70200     0\n 4 SGP       702 70200004 70200004 08MS  070200 SGP01   7020000   70200     0\n 5 SGP       702 70200152 70200005 08MS  070200 SGP01   7020000   70200     0\n 6 SGP       702 70200043 70200006 08MS  070200 SGP01   7020000   70200     0\n 7 SGP       702 70200049 70200007 08MS  070200 SGP01   7020000   70200     0\n 8 SGP       702 70200107 70200008 08MS  070200 SGP01   7020000   70200     0\n 9 SGP       702 70200012 70200009 08MS  070200 SGP01   7020000   70200     0\n10 SGP       702 70200061 70200010 08MS  070200 SGP01   7020000   70200     0\n# ℹ 1,269 more variables: ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;,\n#   LANGTEST_COG &lt;dbl&gt;, LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;,\n#   Option_ICTQ &lt;dbl&gt;, Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;,\n#   Option_UH &lt;dbl&gt;, BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;,\n#   ST003D03T &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;,\n#   ST250Q03JA &lt;dbl&gt;, ST250Q04JA &lt;dbl&gt;, ST250Q05JA &lt;dbl&gt;, ST250D06JA &lt;chr&gt;,\n#   ST250D07JA &lt;chr&gt;, ST251Q01JA &lt;dbl&gt;, ST251Q02JA &lt;dbl&gt;, ST251Q03JA &lt;dbl&gt;, …\n\n\n\n\n\nhead(stu_qqq_SG,10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-subjects-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-subjects-data",
    "title": "Take-home Exercise 2",
    "section": "2.5 Preparing Subjects Data",
    "text": "2.5 Preparing Subjects Data\nIn order to assess students’ performance in various subjects, including Mathematics, Reading and Science, we must identify the columns that correspond to these specific subjects.\nWith reference to PISA website, we can utilise plausible estimates for assessing student proficiency. PISA evaluates student achievement using plausible values (PVs), derived from Item Response Theory models (refer to Chapter 5 of the PISA Data Analysis Manual: SAS or SPSS, Second Edition, or the accompanying guide “Scaling of Cognitive Data and Use of Students Performance Estimates” for detailed information). These models fundamentally deduce a student’s ability from their test performance. In application, plausible values are produced through multiple imputations, considering pupils’ responses to the randomly assigned subset of test questions and their input in background questionnaires.\n\n2.5.1 Preparing Maths Data\nAfter looking through the dataset, we have determined that the columns denoting Mathematics performance are PV1MATH to PV10MATH.\nConsequently, we will compute the average of these plausible values using the rowMeans() function. A new column, called MATHEMATICS, will be generated to store the calculated average plausible values for the Mathematics subject.\nThe corresponding code snippet is as follows:\n\n# Select the columns containing math plausible values\nmath_columns &lt;- stu_qqq_SG[, c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")]\n\n# Calculate the row-wise mean\nmath_row_means &lt;- rowMeans(math_columns)\n\n# Add the row means as a new column to the data frame\nstu_qqq_SG$MATHEMATICS &lt;- math_row_means\n\n\n\n2.5.2 Preparing Reading Data\nSimilarly, upon close examination of the dataset, we have identified that the columns associated with Reading are PV1READ to PV10READ.\nAs a result, we will calculate the average of these plausible values using the rowMeans() function. A new column, labeled READING, will be created to store the resulting average plausible values for the Reading subject.\nThe corresponding code snippet is provided below:\n\n# Select the columns containing read plausible values\nreading_columns &lt;- stu_qqq_SG[, c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")]\n\n# Calculate the row-wise mean\nreading_row_means &lt;- rowMeans(reading_columns)\n\n# Add the row means as a new column to the data frame\nstu_qqq_SG$READING &lt;- reading_row_means\n\n\n\n2.5.3 Preparing Science Data\nLastly, upon a thorough review of the dataset, we have determined that the columns corresponding to Science are PV1SCIE to PV10SCIE.\nConsequently, we will use the rowMeans() function to compute the average of these plausible values. A new column, named SCIENCE, will be established to store the resulting average plausible values for the Science subject.\nThe corresponding code snippet is provided below:\n\n# Select the columns containing science plausible values\nscience_columns &lt;- stu_qqq_SG[, c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")]\n\n# Calculate the row-wise mean\nscience_row_means &lt;- rowMeans(science_columns)\n\n# Add the row means as a new column to the data frame\nstu_qqq_SG$SCIENCE &lt;- science_row_means"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-gender-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-gender-data",
    "title": "Take-home Exercise 2",
    "section": "2.6 Preparing Gender Data",
    "text": "2.6 Preparing Gender Data\nUpon examining the dataset, a particular column labeled ‘ST004D01T’ provides information about gender, using the values 1 and 2. According to the PISA questionnaire manual, 1 corresponds to female, while 2 corresponds to male.\nTo facilitate a more straightforward analysis, we intend to recode the values, assigning 1 to represent female and 2 to represent male. This recoding process will be carried out using the dplyr, a component of the tidyverse package.\nWe prefer generating a new column instead of altering the current one. To achieve this, employ the mutate function in conjunction with the assignment operator (=) to establish a fresh column.\nThis action will introduce a column named ‘GENDER’ into your ‘stu_qqq_SG’ dataset, with values redefined according to the ‘ST004D01T’ column. The original ‘ST004D01T’ column retains its original state, and now, a newly created ‘GENDER’ column contains the recoded values.”\nThe following code snippet provides the pertinent information:\n\n# Install and load the dplyr package if we have not done so\n# install.packages(\"dplyr\")\nlibrary(dplyr)\n\n# Create a new column 'GENDER' with recoded values\nstu_qqq_SG &lt;- stu_qqq_SG %&gt;%\n  mutate(GENDER = recode(ST004D01T, \"1\" = \"female\", \"2\" = \"male\"))\n\nTo check if we have recoded the gender data correctly, we will be displaying the first 10 rows of the GENDER column:\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1\n   GENDER\n   &lt;chr&gt; \n 1 female\n 2 male  \n 3 male  \n 4 male  \n 5 female\n 6 female\n 7 male  \n 8 male  \n 9 female\n10 male  \n\n\n\n\n\nhead(stu_qqq_SG[c(\"GENDER\")],10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-socioeconomic-status-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-socioeconomic-status-data",
    "title": "Take-home Exercise 2",
    "section": "2.7 Preparing Socioeconomic Status Data",
    "text": "2.7 Preparing Socioeconomic Status Data\nWith reference to the PISA 2022 Technical Report, Figure 5.1 in the PISA 2022 Technical Report illustrates the two-dimensional framework taxonomy. The primary dimension categorises proposed constructs into two overarching categories defined by the PISA Governing Board (PGB): domain-specific constructs and general constructs, with the latter encompassing Economic, Social and Cultural Status (ESCS). The secondary dimension further categorises proposed constructs into five categories based on key areas of educational policy setting at different levels of aggregation. These categories include Student Background, Student Beliefs, Attitudes, Feelings. and Behaviours, Teaching Practices and Learning Opportunities, School Practices, Policies, and Infrastructure, and Governance, System-Level Policies, and Practices.\nTherefore, it can be inferred that the ‘ESCS’ column can be utilised for assessing the socioeconomic status of students.\nIf we view the ‘ESCS’ column, there are negative and positive ESCS values, it generally implies a relative positioning of students along a spectrum of economic, social and cultural advantages or disadvantages.\n\nPositive ESCS value: This typically indicates a higher socioeconomic status, suggesting that the student comes from an environment with more favourable economic conditions, higher social standing, and a richer cultural background. Students with positive ESCS values may have access to more resources, educational support and opportunities.\nNegative ESCS value: Conversely, a negative ESCS value suggests a lower socioeconomic status. Students with negative ESCS values may face economic challenges, have a lower social standing, and possibly experience a less enriched cultural environment. These students may encounter additional obstacles in their educational journey due to a lack of resources or support.\n\nThe first 10 rows of the ESCS column can be seen here:\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1\n      ESCS\n     &lt;dbl&gt;\n 1  0.184 \n 2  0.826 \n 3 -1.04  \n 4 -0.961 \n 5  0.0856\n 6  0.127 \n 7 -0.0154\n 8  1.16  \n 9  1.47  \n10  0.520 \n\n\n\n\n\nhead(stu_qqq_SG[c(\"ESCS\")],10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-school-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#preparing-school-data",
    "title": "Take-home Exercise 2",
    "section": "2.8 Preparing School Data",
    "text": "2.8 Preparing School Data\nExploring the dataset reveals a sole column dedicated to schools, labeled ‘CNTSCHID.’ Regrettably, the dataset lacks details about the nature of CNTSCHID or the specific identity associated with each school ID. Nonetheless, we must work with the available information as is.\nThe first 10 rows of the CNTSCHID column can be seen here:\n\nThe outputThe code\n\n\n\n\n# A tibble: 10 × 1\n   CNTSCHID\n      &lt;dbl&gt;\n 1 70200052\n 2 70200134\n 3 70200112\n 4 70200004\n 5 70200152\n 6 70200043\n 7 70200049\n 8 70200107\n 9 70200012\n10 70200061\n\n\n\n\n\nhead(stu_qqq_SG[c(\"CNTSCHID\")],10)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#three-subjects---mathematics-reading-and-science",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#three-subjects---mathematics-reading-and-science",
    "title": "Take-home Exercise 2",
    "section": "3.1 Three Subjects - Mathematics, Reading and Science",
    "text": "3.1 Three Subjects - Mathematics, Reading and Science\n\n3.1.1 Distribution Across Three Subjects - Mathematics, Reading and Science\nWe will now do the plot for each respective subject. We will be doing a histogram to show the distribution across three subjects.\nThe code will be shown below:\n\nMathematicsReadingScience\n\n\n\np1 &lt;- ggplot(data=stu_qqq_SG, \n             aes(x = MATHEMATICS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"light blue\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") +\n  geom_vline(xintercept = mean(stu_qqq_SG$MATHEMATICS), \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1)\n\n\n\n\np2 &lt;- ggplot(data=stu_qqq_SG, \n             aes(x = READING)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"light blue\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Reading scores\") +\n  geom_vline(xintercept = mean(stu_qqq_SG$READING), \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1)\n\n\n\n\np3 &lt;- ggplot(data=stu_qqq_SG, \n             aes(x = SCIENCE)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"light blue\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Science scores\") +\n  geom_vline(xintercept = mean(stu_qqq_SG$SCIENCE), \n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1) \n\n\n\n\nThe figure in the tabset below displays a composite of three histograms, seamlessly created using patchwork. This is specifically designed for merging separate ggplot2 graphs into a unified figure. The red dotted line indicates the mean.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nThe histogram presented above offers a visual representation of the distribution of scores across three academic subjects: MATHEMATICS, READING and SCIENCE. The distribution pattern observed for each subject strongly aligns with the characteristics of a normal distribution.\nA normal distribution is characterised by a symmetrical bell-shaped curve, with the majority of data points clustering around the mean and gradually tapering off towards the extremes. In the context of academic performance, this implies that a significant proportion of students scored close to the average, while fewer students achieved scores either significantly above or below the mean. In the case of academic assessments, a normal distribution suggests that the difficulty level of the questions was appropriately balanced, allowing for a diverse range of scores among the students.\n\n\n3.1.2 Reading vs Mathematics\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG, \n       aes(x= READING, \n           y=MATHEMATICS)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(150,850),\n                  ylim=c(150,850))\n\n\n\n\nThe scatterplot depicted above illustrates a positive correlation between reading and mathematics values. As the reading values increase, so do the corresponding mathematics values. This relationship is further emphasised by the upward trend observed in the best fit line. The consistent increase in one variable is mirrored by a proportional increase in the other. In light of these findings, it can be confidently asserted that a positive connection exists, suggesting that engaging in reading contributes to enhanced performance in mathematics among students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reading-as-our-main-focus",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#reading-as-our-main-focus",
    "title": "Take-home Exercise 2",
    "section": "3.2 “Reading” as our main focus",
    "text": "3.2 “Reading” as our main focus\nWith reference to this research paper titled ‘Reading matters more than mathematics in science learning: an analysis of the relationship between student achievement in reading, mathematics, and science’ by Yuanze Zhu, the results revealed that proficiency in reading and mathematics strongly correlated with science achievement, with reading exerting a more substantial influence than mathematics. Consequently, we assert that prioritising reading over mathematics is essential for enhanced performance in science learning.\nHenceforth, our focus will be exclusively on reading, considering it as the primary driver for improved achievement in other subjects, including Mathematics and Science.\n\n3.2.1 Reading vs Gender\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG, \n       aes(y = READING, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=2)      \n\n\n\n\nWhen it comes to the Reading, females exhibit a higher average performance compared to their male counterparts. The visual representation underscores a clear distinction, suggesting that, on average, females outperform males in the domain of Reading. One plausible interpretation for this observed trend could be rooted in the varying learning styles or preferences between genders. Research has suggested that females may, on average, possess certain cognitive strengths or approaches that align more closely with the skills demanded in Reading tasks. Additionally, sociocultural factors and educational environments may play a role in shaping differential outcomes, influencing how males and females engage with and excel in Reading-related activities.\n\n\n3.2.2 Reading vs Socioeconomic Status (ESCS)\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG, \n       aes(x= READING, y=ESCS)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\nExamining the scatterplot above, it becomes evident that within the reading value range of 200-400, there is minimal correlation with ESCS. During this range, ESCS values exhibit considerable variability, ranging from -3 to 3. However, as reading values surpass 400, ESCS values predominantly hover around 0 and above, indicating a positive relationship. In other words, higher reading values correspond to higher ESCS values. This positive association is further emphasised by the upward trend observed in the best-fit line.\n\n\n3.2.3 Reading vs School ID\nGiven the extensive size of the dataset, our strategy is to concentrate on the top 5 schools that exhibit the highest frequency. Achieving this involves tallying the occurrences of School IDs in the CNTSCHID column.\nTo obtain the counts of each unique CNTSCHID value in descending order, we can use the table() function along with sorting functions.\n\nThe codeThe output\n\n\n\n# Our dataframe is named stu_qqq_SG and the column is CNTSCHID\nschid_counts &lt;- table(stu_qqq_SG$CNTSCHID)\n\n# Convert the result to a data frame and sort in descending order\nschid_counts_df &lt;- as.data.frame(schid_counts)\nschid_counts_df &lt;- schid_counts_df[order(-schid_counts_df$Freq), ]\n\n# Print or use the schid_counts_df as needed\nprint(schid_counts_df)\n\n\n\n\n\n        Var1 Freq\n20  70200020   60\n75  70200075   60\n158 70200159   59\n13  70200013   58\n45  70200045   58\n66  70200066   58\n141 70200141   58\n12  70200012   57\n40  70200040   57\n62  70200062   57\n105 70200105   57\n110 70200110   57\n118 70200118   57\n132 70200132   57\n4   70200004   56\n11  70200011   56\n26  70200026   56\n31  70200031   56\n35  70200035   56\n49  70200049   56\n67  70200067   56\n71  70200071   56\n82  70200082   56\n94  70200094   56\n130 70200130   56\n1   70200001   55\n44  70200044   55\n52  70200052   55\n111 70200111   55\n142 70200142   55\n145 70200145   55\n154 70200155   55\n27  70200027   54\n43  70200043   54\n119 70200119   54\n139 70200139   54\n18  70200018   52\n114 70200114   51\n38  70200038   40\n90  70200090   40\n112 70200112   40\n128 70200128   40\n150 70200151   40\n161 70200162   40\n17  70200017   39\n19  70200019   39\n29  70200029   39\n53  70200053   39\n59  70200059   39\n61  70200061   39\n63  70200063   39\n65  70200065   39\n68  70200068   39\n84  70200084   39\n104 70200104   39\n106 70200106   39\n131 70200131   39\n137 70200137   39\n164 70200165   39\n2   70200002   38\n5   70200005   38\n7   70200007   38\n8   70200008   38\n25  70200025   38\n36  70200036   38\n64  70200064   38\n73  70200073   38\n92  70200092   38\n93  70200093   38\n116 70200116   38\n126 70200126   38\n134 70200134   38\n140 70200140   38\n146 70200146   38\n151 70200152   38\n16  70200016   37\n21  70200021   37\n22  70200022   37\n32  70200032   37\n39  70200039   37\n42  70200042   37\n46  70200046   37\n47  70200047   37\n74  70200074   37\n76  70200076   37\n80  70200080   37\n85  70200085   37\n86  70200086   37\n87  70200087   37\n108 70200108   37\n117 70200117   37\n120 70200120   37\n121 70200121   37\n127 70200127   37\n135 70200135   37\n136 70200136   37\n144 70200144   37\n152 70200153   37\n155 70200156   37\n162 70200163   37\n163 70200164   37\n3   70200003   36\n6   70200006   36\n9   70200009   36\n10  70200010   36\n14  70200014   36\n24  70200024   36\n34  70200034   36\n37  70200037   36\n48  70200048   36\n51  70200051   36\n54  70200054   36\n58  70200058   36\n70  70200070   36\n81  70200081   36\n83  70200083   36\n88  70200088   36\n89  70200089   36\n96  70200096   36\n99  70200099   36\n102 70200102   36\n103 70200103   36\n109 70200109   36\n122 70200122   36\n125 70200125   36\n129 70200129   36\n143 70200143   36\n159 70200160   36\n160 70200161   36\n23  70200023   35\n55  70200055   35\n77  70200077   35\n91  70200091   35\n97  70200097   35\n101 70200101   35\n107 70200107   35\n133 70200133   35\n153 70200154   35\n15  70200015   34\n72  70200072   34\n98  70200098   34\n100 70200100   34\n113 70200113   34\n156 70200157   34\n33  70200033   33\n56  70200056   33\n69  70200069   33\n115 70200115   33\n123 70200123   32\n124 70200124   32\n79  70200079   31\n148 70200148   31\n30  70200030   30\n50  70200050   30\n147 70200147   30\n60  70200060   29\n157 70200158   29\n57  70200057   28\n95  70200095   28\n149 70200149   28\n28  70200028   22\n78  70200078   22\n138 70200138   15\n41  70200041    5\n\n\n\n\n\nFrom the output, we can see that the top 5 School IDs are:\n\n70200020\n70200075\n70200159\n70200013\n70200045\n\nTherefore, we will only focus on the above mentioned School IDs for our analysis.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n# Filter the data for specific values of CNTSCHID\nfiltered_data &lt;- stu_qqq_SG %&gt;%\n  filter(CNTSCHID %in% c(70200020, 70200075, 70200159, 70200013, 70200045))\n\n# Convert CNTSCHID to factor\nfiltered_data$CNTSCHID &lt;- as.factor(filtered_data$CNTSCHID)\n\n# Create the plot with the filtered data\nggplot(data = filtered_data, \n       aes(y = READING, x = CNTSCHID)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\",        \n             fun.y = \"mean\",           \n             colour = \"red\",          \n             size = 2)\n\n\n\n\nUpon a detailed analysis of the boxplot, which visually encapsulates the distribution of Reading plausible values across multiple schools (identified by CNTSCHID), a distinct trend emerges. Notably, CNTSCHID 70200020, representing a specific school within the dataset, stands out with the highest mean Reading score, hovering around an impressive ~630. This observation sheds light on the academic performance of this particular school, suggesting a noteworthy level of achievement in Reading compared to the other four schools. The boxplot serves as a valuable tool in visually conveying these distributional nuances, highlighting the academic prowess of CNTSCHID 70200020 within the context of Reading achievement among the schools."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html",
    "title": "In-class Exercise 01: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\n[haven] (https://www.tidyverse.org/)\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 01: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are:\n\ntidyverse, and\n[haven] (https://www.tidyverse.org/)\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "title": "In-class Exercise 01: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  }
]