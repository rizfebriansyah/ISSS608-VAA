---
title: "Take-home Exercise 3"
subtitle: "Be Weatherwise or Otherwise"
date: "12 February, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

# 1. Overview

## 1.1 Setting the Scene for This Take Home Exercise

As indicated by the office report and the accompanying infographic:

-   The average daily temperatures are expected to rise by 1.4 to 4.6 degrees, and
-   The difference in precipitation between the wet season (November to January) and the dry season (February and June to September) is anticipated to become more distinct.

![](images/Climate_change.jpg)

## 1.2 The Task

For this take-home assignment, we are tasked to:

-   Select a weather station and retrieve historical daily data on temperature or rainfall from the website of the Meteorological Service Singapore.

-   Choose records of daily temperature or rainfall for a month from the years 1983, 1993, 2003, 2013, and 2023, and then craft a data visualisation driven by analytics.

-   Incorporate suitable interactive features to improve the experience of users in exploring data and/or in visual storytelling.

For my take home exercise 3, I have chosen the Changi weather station and decided to focus on the daily temperature data for the month of February across the years 1983, 1993, 2003, 2013, and 2023 to examine the hypothesis suggesting an increase in daily average temperatures between 1.4 to 4.6 degrees Celsius.

# 2. Getting Started

## 2.1 Loading Necessary R packages

We will utilise the following packages:

-   ggiraph for making 'ggplot' graphics interactive.

-   plotly, R library for plotting interactive statistical graphs.

-   DT provides an R interface to the JavaScript library DataTables that create interactive table on html page.

-   tidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.

-   patchwork for combining multiple ggplot2 graphs into one figure.

The code which loads the R packages:

```{r}
pacman::p_load(ggiraph, plotly, 
               patchwork, DT, tidyverse) 
```

## 2.2 Import dataset

Of course our next step involves importing the dataset. As mentioned earlier, we will be analysing data from the Changi weather stations for the year 1983, 1993, 2003, 2013 and 2023. The following code snippet will outline the sequential steps we will undertake.

Firstly, we need to import the 5 csv files using `read_csv`.
```{r}
#| eval: false
data83 <- read_csv("data/CHANGI_FEB1983")
data93 <- read_csv("data/CHANGI_FEB1993")
data03 <- read_csv("data/CHANGI_FEB2003")
data13 <- read_csv("data/CHANGI_FEB2013")
data23 <- read_csv("data/CHANGI_FEB2023")
```


Save the filtered dataset as an RDS file to simplify subsequent data imports.



Read the RDS file that has been exported.


This code will undergo pre-processing to select all the required variables in which we need to do further analysis on. A cleaner code have been compiled below.

::: callout-note
# Code Explanation

In the R code below, we begin by selecting specific columns of interest from the dataset stu_qqq_SG. Following this, we will calculate the row means for math, science and reading scores, providing a more comprehensive measure of individual performance. The column names are then renamed to enhance clarity. Afterwards, a subset of columns is selected for focused analysis, which includes gender, socioeconomic status (escs), and educational level (school). Gender and school variables are recoded to more interpretable factors, replacing numeric codes with meaningful and easier to understand labels. The cleaned dataset, named stu_qqq_SG_2, is saved in an RDS file for future use. The RDS file is subsequently read back into the script.
:::

```{r}
# Step 1: Select relevant columns

```

::: callout-note
# Code Explanation - as.factor() function

Moving on, the provided code transforms the 'gender' and 'school' columns in the R data frame stu_qqq_SG_2 into factors using the `as.factor()` function. This conversion is beneficial when dealing with categorical variables, as factors in R provide a structured representation of such data. The gender factor represents two categories, "Male" and "Female," while the school factor likely denotes different levels of education, such as "Lower Sec," "Upper Sec," and others. Converting these columns to factors ensures that R recognises and treats them appropriately as categorical variables during statistical analysis, allowing for better representation and interpretation of the data. Subsequently, a summary statistics report is generated, offering a quick overview of the of the cleaned dataset.
:::


